plugins {
    id 'com.android.library'
    id 'org.jetbrains.kotlin.android'
    id 'maven-publish'
}

android {
    namespace 'com.cosmo.loadinganimation'
    compileSdk 34

    defaultConfig {
        minSdk 24
        targetSdk 34
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }

    kotlinOptions {
        jvmTarget = '17'
    }
    viewBinding {
        enabled = true
    }
}

dependencies {
    implementation 'androidx.core:core-ktx:1.15.0'
    implementation 'androidx.appcompat:appcompat:1.7.0'
    implementation 'com.google.android.material:material:1.12.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.2.0'
    implementation 'com.github.jitpack:android-example:1.0.1'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.2.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.6.1'

    implementation 'com.intuit.sdp:sdp-android:1.1.1'
    implementation 'com.intuit.ssp:ssp-android:1.1.1'
}


publishing {
    publications {
        release(MavenPublication) {
            // Reference the release component correctly
            groupId = 'com.github.zohaircosmo'
            artifactId = 'com.cosmo.loadinganimation'
            version = '1.1.0-beta'
            afterEvaluate {
                from components.release

            }
            pom {
                name = 'CosmoAnimator Library'
                description = 'A custom loading animation library for Android.'
                url = 'https://github.com/zohaircosmo/cosmoAnimatorLibrary'

                licenses {
                    license {
                        name = 'MIT License'
                        url = 'https://opensource.org/licenses/MIT'
                    }
                }

                developers {
                    developer {
                        id = 'zohaircosmo'
                        name = 'Zohair Cosmo'
                        email = 'zohair@cosmotogether.com'
                    }
                }

                scm {
                    connection = 'scm:git:git://github.com/zohaircosmo/cosmoAnimatorLibrary.git'
                    developerConnection = 'scm:git:ssh://github.com/zohaircosmo/cosmoAnimatorLibrary.git'
                    url = 'https://github.com/zohaircosmo/cosmoAnimatorLibrary'
                }
            }
        }
    }
    repositories {
        maven {
            url layout.buildDirectory.dir("repository/com/github/zohaircosmo")
            credentials { username authToken }
            tasks.register('generateRepo', Zip) {
                def publishTask = tasks.named('1.1.0-alpha')
                from publishTask.map { it.getRepository().getUrl() }
                into 'com.cosmo.loadinganimation'
                archiveFileName.set('com.cosmo.loadinganimation.zip')
            }
        }
    }
}
